#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="VideoGameStudioDB")]
public partial class VideogameStudioDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertEMPLOYEE(EMPLOYEE instance);
  partial void UpdateEMPLOYEE(EMPLOYEE instance);
  partial void DeleteEMPLOYEE(EMPLOYEE instance);
  partial void InsertHAPPINESSLEVEL(HAPPINESSLEVEL instance);
  partial void UpdateHAPPINESSLEVEL(HAPPINESSLEVEL instance);
  partial void DeleteHAPPINESSLEVEL(HAPPINESSLEVEL instance);
  partial void InsertJOB(JOB instance);
  partial void UpdateJOB(JOB instance);
  partial void DeleteJOB(JOB instance);
  partial void InsertDEVELOPMENT(DEVELOPMENT instance);
  partial void UpdateDEVELOPMENT(DEVELOPMENT instance);
  partial void DeleteDEVELOPMENT(DEVELOPMENT instance);
  partial void InsertGAMESTUDIO(GAMESTUDIO instance);
  partial void UpdateGAMESTUDIO(GAMESTUDIO instance);
  partial void DeleteGAMESTUDIO(GAMESTUDIO instance);
  #endregion
	
	public VideogameStudioDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["VideoGameStudioDBConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public VideogameStudioDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public VideogameStudioDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public VideogameStudioDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public VideogameStudioDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<EMPLOYEE> EMPLOYEEs
	{
		get
		{
			return this.GetTable<EMPLOYEE>();
		}
	}
	
	public System.Data.Linq.Table<HAPPINESSLEVEL> HAPPINESSLEVELs
	{
		get
		{
			return this.GetTable<HAPPINESSLEVEL>();
		}
	}
	
	public System.Data.Linq.Table<JOB> JOBs
	{
		get
		{
			return this.GetTable<JOB>();
		}
	}
	
	public System.Data.Linq.Table<DEVELOPMENT> DEVELOPMENTs
	{
		get
		{
			return this.GetTable<DEVELOPMENT>();
		}
	}
	
	public System.Data.Linq.Table<GAMESTUDIO> GAMESTUDIOs
	{
		get
		{
			return this.GetTable<GAMESTUDIO>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMPLOYEE")]
public partial class EMPLOYEE : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _FirstName;
	
	private string _LastName;
	
	private int _Age;
	
	private int _WorkExperience;
	
	private int _WorkedMonths;
	
	private int _Productivity;
	
	private decimal _Salary;
	
	private int _Job_ID;
	
	private int _HappinessLevel_ID;
	
	private EntityRef<HAPPINESSLEVEL> _HAPPINESSLEVEL;
	
	private EntityRef<JOB> _JOB;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnAgeChanging(int value);
    partial void OnAgeChanged();
    partial void OnWorkExperienceChanging(int value);
    partial void OnWorkExperienceChanged();
    partial void OnWorkedMonthsChanging(int value);
    partial void OnWorkedMonthsChanged();
    partial void OnProductivityChanging(int value);
    partial void OnProductivityChanged();
    partial void OnSalaryChanging(decimal value);
    partial void OnSalaryChanged();
    partial void OnJob_IDChanging(int value);
    partial void OnJob_IDChanged();
    partial void OnHappinessLevel_IDChanging(int value);
    partial void OnHappinessLevel_IDChanged();
    #endregion
	
	public EMPLOYEE()
	{
		this._HAPPINESSLEVEL = default(EntityRef<HAPPINESSLEVEL>);
		this._JOB = default(EntityRef<JOB>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int NOT NULL")]
	public int Age
	{
		get
		{
			return this._Age;
		}
		set
		{
			if ((this._Age != value))
			{
				this.OnAgeChanging(value);
				this.SendPropertyChanging();
				this._Age = value;
				this.SendPropertyChanged("Age");
				this.OnAgeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkExperience", DbType="Int NOT NULL")]
	public int WorkExperience
	{
		get
		{
			return this._WorkExperience;
		}
		set
		{
			if ((this._WorkExperience != value))
			{
				this.OnWorkExperienceChanging(value);
				this.SendPropertyChanging();
				this._WorkExperience = value;
				this.SendPropertyChanged("WorkExperience");
				this.OnWorkExperienceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkedMonths", DbType="Int NOT NULL")]
	public int WorkedMonths
	{
		get
		{
			return this._WorkedMonths;
		}
		set
		{
			if ((this._WorkedMonths != value))
			{
				this.OnWorkedMonthsChanging(value);
				this.SendPropertyChanging();
				this._WorkedMonths = value;
				this.SendPropertyChanged("WorkedMonths");
				this.OnWorkedMonthsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Productivity", DbType="Int NOT NULL")]
	public int Productivity
	{
		get
		{
			return this._Productivity;
		}
		set
		{
			if ((this._Productivity != value))
			{
				this.OnProductivityChanging(value);
				this.SendPropertyChanging();
				this._Productivity = value;
				this.SendPropertyChanged("Productivity");
				this.OnProductivityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary", DbType="Decimal(20,0) NOT NULL")]
	public decimal Salary
	{
		get
		{
			return this._Salary;
		}
		set
		{
			if ((this._Salary != value))
			{
				this.OnSalaryChanging(value);
				this.SendPropertyChanging();
				this._Salary = value;
				this.SendPropertyChanged("Salary");
				this.OnSalaryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Job_ID", DbType="Int NOT NULL")]
	public int Job_ID
	{
		get
		{
			return this._Job_ID;
		}
		set
		{
			if ((this._Job_ID != value))
			{
				if (this._JOB.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnJob_IDChanging(value);
				this.SendPropertyChanging();
				this._Job_ID = value;
				this.SendPropertyChanged("Job_ID");
				this.OnJob_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HappinessLevel_ID", DbType="Int NOT NULL")]
	public int HappinessLevel_ID
	{
		get
		{
			return this._HappinessLevel_ID;
		}
		set
		{
			if ((this._HappinessLevel_ID != value))
			{
				if (this._HAPPINESSLEVEL.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnHappinessLevel_IDChanging(value);
				this.SendPropertyChanging();
				this._HappinessLevel_ID = value;
				this.SendPropertyChanged("HappinessLevel_ID");
				this.OnHappinessLevel_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HAPPINESSLEVEL_EMPLOYEE", Storage="_HAPPINESSLEVEL", ThisKey="HappinessLevel_ID", OtherKey="ID", IsForeignKey=true)]
	public HAPPINESSLEVEL HAPPINESSLEVEL
	{
		get
		{
			return this._HAPPINESSLEVEL.Entity;
		}
		set
		{
			HAPPINESSLEVEL previousValue = this._HAPPINESSLEVEL.Entity;
			if (((previousValue != value) 
						|| (this._HAPPINESSLEVEL.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._HAPPINESSLEVEL.Entity = null;
					previousValue.EMPLOYEEs.Remove(this);
				}
				this._HAPPINESSLEVEL.Entity = value;
				if ((value != null))
				{
					value.EMPLOYEEs.Add(this);
					this._HappinessLevel_ID = value.ID;
				}
				else
				{
					this._HappinessLevel_ID = default(int);
				}
				this.SendPropertyChanged("HAPPINESSLEVEL");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JOB_EMPLOYEE", Storage="_JOB", ThisKey="Job_ID", OtherKey="ID", IsForeignKey=true)]
	public JOB JOB
	{
		get
		{
			return this._JOB.Entity;
		}
		set
		{
			JOB previousValue = this._JOB.Entity;
			if (((previousValue != value) 
						|| (this._JOB.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._JOB.Entity = null;
					previousValue.EMPLOYEEs.Remove(this);
				}
				this._JOB.Entity = value;
				if ((value != null))
				{
					value.EMPLOYEEs.Add(this);
					this._Job_ID = value.ID;
				}
				else
				{
					this._Job_ID = default(int);
				}
				this.SendPropertyChanged("JOB");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HAPPINESSLEVEL")]
public partial class HAPPINESSLEVEL : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Title;
	
	private EntitySet<EMPLOYEE> _EMPLOYEEs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
	
	public HAPPINESSLEVEL()
	{
		this._EMPLOYEEs = new EntitySet<EMPLOYEE>(new Action<EMPLOYEE>(this.attach_EMPLOYEEs), new Action<EMPLOYEE>(this.detach_EMPLOYEEs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HAPPINESSLEVEL_EMPLOYEE", Storage="_EMPLOYEEs", ThisKey="ID", OtherKey="HappinessLevel_ID")]
	public EntitySet<EMPLOYEE> EMPLOYEEs
	{
		get
		{
			return this._EMPLOYEEs;
		}
		set
		{
			this._EMPLOYEEs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_EMPLOYEEs(EMPLOYEE entity)
	{
		this.SendPropertyChanging();
		entity.HAPPINESSLEVEL = this;
	}
	
	private void detach_EMPLOYEEs(EMPLOYEE entity)
	{
		this.SendPropertyChanging();
		entity.HAPPINESSLEVEL = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JOB")]
public partial class JOB : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Title;
	
	private EntitySet<EMPLOYEE> _EMPLOYEEs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
	
	public JOB()
	{
		this._EMPLOYEEs = new EntitySet<EMPLOYEE>(new Action<EMPLOYEE>(this.attach_EMPLOYEEs), new Action<EMPLOYEE>(this.detach_EMPLOYEEs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JOB_EMPLOYEE", Storage="_EMPLOYEEs", ThisKey="ID", OtherKey="Job_ID")]
	public EntitySet<EMPLOYEE> EMPLOYEEs
	{
		get
		{
			return this._EMPLOYEEs;
		}
		set
		{
			this._EMPLOYEEs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_EMPLOYEEs(EMPLOYEE entity)
	{
		this.SendPropertyChanging();
		entity.JOB = this;
	}
	
	private void detach_EMPLOYEEs(EMPLOYEE entity)
	{
		this.SendPropertyChanging();
		entity.JOB = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DEVELOPMENT")]
public partial class DEVELOPMENT : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Title;
	
	private int _DevelopmentComplexity;
	
	private int _DevelopmentProgress;
	
	private int _TestingProgress;
	
	private decimal _Profit;
	
	private decimal _Priority;
	
	private System.Nullable<int> _GameStudio_ID;
	
	private EntitySet<GAMESTUDIO> _GAMESTUDIOs;
	
	private EntityRef<GAMESTUDIO> _GAMESTUDIO;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDevelopmentComplexityChanging(int value);
    partial void OnDevelopmentComplexityChanged();
    partial void OnDevelopmentProgressChanging(int value);
    partial void OnDevelopmentProgressChanged();
    partial void OnTestingProgressChanging(int value);
    partial void OnTestingProgressChanged();
    partial void OnProfitChanging(decimal value);
    partial void OnProfitChanged();
    partial void OnPriorityChanging(decimal value);
    partial void OnPriorityChanged();
    partial void OnGameStudio_IDChanging(System.Nullable<int> value);
    partial void OnGameStudio_IDChanged();
    #endregion
	
	public DEVELOPMENT()
	{
		this._GAMESTUDIOs = new EntitySet<GAMESTUDIO>(new Action<GAMESTUDIO>(this.attach_GAMESTUDIOs), new Action<GAMESTUDIO>(this.detach_GAMESTUDIOs));
		this._GAMESTUDIO = default(EntityRef<GAMESTUDIO>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DevelopmentComplexity", DbType="Int NOT NULL")]
	public int DevelopmentComplexity
	{
		get
		{
			return this._DevelopmentComplexity;
		}
		set
		{
			if ((this._DevelopmentComplexity != value))
			{
				this.OnDevelopmentComplexityChanging(value);
				this.SendPropertyChanging();
				this._DevelopmentComplexity = value;
				this.SendPropertyChanged("DevelopmentComplexity");
				this.OnDevelopmentComplexityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DevelopmentProgress", DbType="Int NOT NULL")]
	public int DevelopmentProgress
	{
		get
		{
			return this._DevelopmentProgress;
		}
		set
		{
			if ((this._DevelopmentProgress != value))
			{
				this.OnDevelopmentProgressChanging(value);
				this.SendPropertyChanging();
				this._DevelopmentProgress = value;
				this.SendPropertyChanged("DevelopmentProgress");
				this.OnDevelopmentProgressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestingProgress", DbType="Int NOT NULL")]
	public int TestingProgress
	{
		get
		{
			return this._TestingProgress;
		}
		set
		{
			if ((this._TestingProgress != value))
			{
				this.OnTestingProgressChanging(value);
				this.SendPropertyChanging();
				this._TestingProgress = value;
				this.SendPropertyChanged("TestingProgress");
				this.OnTestingProgressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profit", DbType="Decimal(20,0) NOT NULL")]
	public decimal Profit
	{
		get
		{
			return this._Profit;
		}
		set
		{
			if ((this._Profit != value))
			{
				this.OnProfitChanging(value);
				this.SendPropertyChanging();
				this._Profit = value;
				this.SendPropertyChanged("Profit");
				this.OnProfitChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Decimal(20,2) NOT NULL")]
	public decimal Priority
	{
		get
		{
			return this._Priority;
		}
		set
		{
			if ((this._Priority != value))
			{
				this.OnPriorityChanging(value);
				this.SendPropertyChanging();
				this._Priority = value;
				this.SendPropertyChanged("Priority");
				this.OnPriorityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameStudio_ID", DbType="Int")]
	public System.Nullable<int> GameStudio_ID
	{
		get
		{
			return this._GameStudio_ID;
		}
		set
		{
			if ((this._GameStudio_ID != value))
			{
				if (this._GAMESTUDIO.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnGameStudio_IDChanging(value);
				this.SendPropertyChanging();
				this._GameStudio_ID = value;
				this.SendPropertyChanged("GameStudio_ID");
				this.OnGameStudio_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEVELOPMENT_GAMESTUDIO", Storage="_GAMESTUDIOs", ThisKey="ID", OtherKey="CurrentDevelopment_ID")]
	public EntitySet<GAMESTUDIO> GAMESTUDIOs
	{
		get
		{
			return this._GAMESTUDIOs;
		}
		set
		{
			this._GAMESTUDIOs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GAMESTUDIO_DEVELOPMENT", Storage="_GAMESTUDIO", ThisKey="GameStudio_ID", OtherKey="ID", IsForeignKey=true)]
	public GAMESTUDIO GAMESTUDIO
	{
		get
		{
			return this._GAMESTUDIO.Entity;
		}
		set
		{
			GAMESTUDIO previousValue = this._GAMESTUDIO.Entity;
			if (((previousValue != value) 
						|| (this._GAMESTUDIO.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._GAMESTUDIO.Entity = null;
					previousValue.DEVELOPMENTs.Remove(this);
				}
				this._GAMESTUDIO.Entity = value;
				if ((value != null))
				{
					value.DEVELOPMENTs.Add(this);
					this._GameStudio_ID = value.ID;
				}
				else
				{
					this._GameStudio_ID = default(Nullable<int>);
				}
				this.SendPropertyChanged("GAMESTUDIO");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_GAMESTUDIOs(GAMESTUDIO entity)
	{
		this.SendPropertyChanging();
		entity.DEVELOPMENT = this;
	}
	
	private void detach_GAMESTUDIOs(GAMESTUDIO entity)
	{
		this.SendPropertyChanging();
		entity.DEVELOPMENT = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GAMESTUDIO")]
public partial class GAMESTUDIO : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Title;
	
	private decimal _Budget;
	
	private int _CurrentWorkForDevelopers;
	
	private int _CurrentWorkForTesters;
	
	private System.Nullable<int> _CurrentDevelopment_ID;
	
	private EntitySet<DEVELOPMENT> _DEVELOPMENTs;
	
	private EntityRef<DEVELOPMENT> _DEVELOPMENT;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnBudgetChanging(decimal value);
    partial void OnBudgetChanged();
    partial void OnCurrentWorkForDevelopersChanging(int value);
    partial void OnCurrentWorkForDevelopersChanged();
    partial void OnCurrentWorkForTestersChanging(int value);
    partial void OnCurrentWorkForTestersChanged();
    partial void OnCurrentDevelopment_IDChanging(System.Nullable<int> value);
    partial void OnCurrentDevelopment_IDChanged();
    #endregion
	
	public GAMESTUDIO()
	{
		this._DEVELOPMENTs = new EntitySet<DEVELOPMENT>(new Action<DEVELOPMENT>(this.attach_DEVELOPMENTs), new Action<DEVELOPMENT>(this.detach_DEVELOPMENTs));
		this._DEVELOPMENT = default(EntityRef<DEVELOPMENT>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Budget", DbType="Decimal(20,0) NOT NULL")]
	public decimal Budget
	{
		get
		{
			return this._Budget;
		}
		set
		{
			if ((this._Budget != value))
			{
				this.OnBudgetChanging(value);
				this.SendPropertyChanging();
				this._Budget = value;
				this.SendPropertyChanged("Budget");
				this.OnBudgetChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentWorkForDevelopers", DbType="Int NOT NULL")]
	public int CurrentWorkForDevelopers
	{
		get
		{
			return this._CurrentWorkForDevelopers;
		}
		set
		{
			if ((this._CurrentWorkForDevelopers != value))
			{
				this.OnCurrentWorkForDevelopersChanging(value);
				this.SendPropertyChanging();
				this._CurrentWorkForDevelopers = value;
				this.SendPropertyChanged("CurrentWorkForDevelopers");
				this.OnCurrentWorkForDevelopersChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentWorkForTesters", DbType="Int NOT NULL")]
	public int CurrentWorkForTesters
	{
		get
		{
			return this._CurrentWorkForTesters;
		}
		set
		{
			if ((this._CurrentWorkForTesters != value))
			{
				this.OnCurrentWorkForTestersChanging(value);
				this.SendPropertyChanging();
				this._CurrentWorkForTesters = value;
				this.SendPropertyChanged("CurrentWorkForTesters");
				this.OnCurrentWorkForTestersChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentDevelopment_ID", DbType="Int")]
	public System.Nullable<int> CurrentDevelopment_ID
	{
		get
		{
			return this._CurrentDevelopment_ID;
		}
		set
		{
			if ((this._CurrentDevelopment_ID != value))
			{
				if (this._DEVELOPMENT.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCurrentDevelopment_IDChanging(value);
				this.SendPropertyChanging();
				this._CurrentDevelopment_ID = value;
				this.SendPropertyChanged("CurrentDevelopment_ID");
				this.OnCurrentDevelopment_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GAMESTUDIO_DEVELOPMENT", Storage="_DEVELOPMENTs", ThisKey="ID", OtherKey="GameStudio_ID")]
	public EntitySet<DEVELOPMENT> DEVELOPMENTs
	{
		get
		{
			return this._DEVELOPMENTs;
		}
		set
		{
			this._DEVELOPMENTs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEVELOPMENT_GAMESTUDIO", Storage="_DEVELOPMENT", ThisKey="CurrentDevelopment_ID", OtherKey="ID", IsForeignKey=true)]
	public DEVELOPMENT DEVELOPMENT
	{
		get
		{
			return this._DEVELOPMENT.Entity;
		}
		set
		{
			DEVELOPMENT previousValue = this._DEVELOPMENT.Entity;
			if (((previousValue != value) 
						|| (this._DEVELOPMENT.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._DEVELOPMENT.Entity = null;
					previousValue.GAMESTUDIOs.Remove(this);
				}
				this._DEVELOPMENT.Entity = value;
				if ((value != null))
				{
					value.GAMESTUDIOs.Add(this);
					this._CurrentDevelopment_ID = value.ID;
				}
				else
				{
					this._CurrentDevelopment_ID = default(Nullable<int>);
				}
				this.SendPropertyChanged("DEVELOPMENT");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_DEVELOPMENTs(DEVELOPMENT entity)
	{
		this.SendPropertyChanging();
		entity.GAMESTUDIO = this;
	}
	
	private void detach_DEVELOPMENTs(DEVELOPMENT entity)
	{
		this.SendPropertyChanging();
		entity.GAMESTUDIO = null;
	}
}
#pragma warning restore 1591
